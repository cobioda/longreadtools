# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/Isomatrix_tools.ipynb.

# %% auto 0
__all__ = ['isomatrix_to_anndata']

# %% ../nbs/Isomatrix_tools.ipynb 3
import pandas as pd
import scanpy as sc
from scanpy import AnnData
from scipy.sparse import csr_matrix

def isomatrix_to_anndata(file_path:str,  # The path to the isomatrix csv file to be read.
                        sparse:bool=True  # Flag to determine if the output should be a sparse matrix.
) -> AnnData: # The converted isomatix as a scanpy compatible  anndata object
    """
    This function reads a file into a pandas DataFrame, performs some transformations, 
    and then converts the DataFrame into a sparse matrix and an AnnData object.
    
    Returns:
    anndata (AnnData): The resulting AnnData object.
    """
    
    # Read in the data from the file
    df = pd.read_csv(file_path, sep='\t', index_col=0)
    
    # Filter out rows where the transcriptId is "undef"
    df = df.loc[df["transcriptId"] != "undef"]
    
    # Reset the index of the DataFrame
    df = df.reset_index()
    
    # Transpose the DataFrame
    df = df.T
    
    # Create a copy of the DataFrame for later use
    df_1 = df.copy()
    
    # Update the column names of the DataFrame
    df.columns = df_1.iloc[0].astype(str) + "_" + df_1.iloc[1].astype(str)
    
    # Extract the first three rows from the copied DataFrame
    first_three_rows = df_1.iloc[:3]
  
    # Drop unnecessary rows from the DataFrame
    df = df.iloc[3:]
    
    # Convert the DataFrame to a sparse matrix if the sparse flag is True
    if sparse:
        matrix = csr_matrix(df.values.astype('float32'))
    else:
        matrix = df.values.astype('float32')
    
    # Convert the matrix to an AnnData object
    anndata = sc.AnnData(X=matrix, obs=pd.DataFrame(index=df.index), var=pd.DataFrame(index=df.columns))
    
    # Add additional information to the AnnData object vars
    anndata.var['gene_id'] = first_three_rows.iloc[0, :].values
    anndata.var['transcript_id'] = first_three_rows.iloc[1, :].values
    anndata.var['nb_exons'] = first_three_rows.iloc[2, :].values.astype('int32')
    
    return anndata
